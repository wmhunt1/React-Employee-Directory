{"version":3,"sources":["components/Sort/index.js","components/Table/index.js","components/Filter/index.js","App.js","index.js"],"names":["property","Table","props","state","employees","map","employee","id","name","dept","Object","keys","this","key","index","toUpperCase","renderTableHeader","renderTableData","Component","sort","a","b","Sort","useState","data","setData","sortType","setSortType","useEffect","type","sortProperty","sorted","sortArray","className","onChange","e","target","value","Filter","setValue","filter","includes","App","ReactDOM","render","document","getElementById"],"mappings":"k1BAIwBA,E,2EC6CTC,E,kDAxCZ,WAAYC,GAAQ,IAAD,8BAChB,cAAMA,IACDC,MAAQ,CAACC,aAFE,E,8DAKlB,OAAOA,EAAUC,KAAI,SAACC,GAAc,IAC1BC,EAAkBD,EAAlBC,GAAIC,EAAcF,EAAdE,KAAMC,EAAQH,EAARG,KACjB,OACG,+BACG,6BAAKF,IACL,6BAAKC,IACL,6BAAKC,MAHCF,Q,0CAWf,OADaG,OAAOC,KAAKC,KAAKT,MAAMC,UAAU,IAChCC,KAAI,SAACQ,EAAKC,GACrB,OAAO,6BAAiBD,EAAIE,eAAZD,Q,+BAKnB,OACG,8BAGG,uBAAOP,GAAG,YAAV,SACG,kCACG,6BAAKK,KAAKI,sBACTJ,KAAKK,6B,GAjCFC,a,eDMpBd,EAAUe,MAVcnB,EAUM,OATnB,SAAUoB,EAAGC,GAChB,OAAID,EAAEpB,GAAYqB,EAAErB,GACT,EACFoB,EAAEpB,GAAYqB,EAAErB,IACb,EAEL,KAgDAsB,MA5Cf,WAAiB,IAAD,EACYC,mBAAS,IADrB,mBACLC,EADK,KACCC,EADD,OAEoBF,mBAAS,QAF7B,mBAELG,EAFK,KAEKC,EAFL,KAqBZ,OAjBAC,qBAAU,YACU,SAAAC,GAChB,IAMMC,EANQ,CACZvB,GAAI,KACJC,KAAM,OAENC,KAAM,QAEmBoB,GACrBE,EAAS,YAAI3B,GAAWe,MAAK,SAACC,EAAGC,GAAJ,OAAUD,EAAEU,GAAgBT,EAAES,MAEjEL,EAAQM,GAGVC,CAAUN,KACT,CAACA,IAGF,sBAAKO,UAAU,SAAf,UACI,oDACF,yBAAQC,SAAU,SAACC,GAAD,OAAOR,EAAYQ,EAAEC,OAAOC,QAA9C,UAEE,wBAAQA,MAAM,KAAd,gBAEA,wBAAQA,MAAM,OAAd,kBAEA,wBAAQA,MAAM,OAAd,2BAGDb,EAAKnB,KAAI,SAAAC,GAAQ,OAChB,gCACE,4CAAaA,EAASC,MACtB,8CAAeD,EAASE,QACxB,oDAAqBF,EAASG,UAHtBH,EAASC,WEdd+B,MA/Bf,WAAmB,IAAD,EACYf,mBAAS,IADrB,mBACPc,EADO,KACAE,EADA,KAGd,OACE,gCACE,sDACA,uBAAOhC,GAAK,SACVsB,KAAK,OACLQ,MAAOA,EACPH,SAAU,SAAAC,GAAC,OAAII,EAASJ,EAAEC,OAAOC,UAGlCjC,EACEoC,QAAO,SAAAlC,GACN,OAAK+B,MACD/B,EAASE,KAAKiC,SAASJ,SAA3B,MAIDhC,KAAI,SAAAC,GAAQ,OACX,gCACE,0CAAWA,EAASC,MACpB,4CAAaD,EAASE,QACtB,kDAAmBF,EAASG,kB,MCR3BiC,MAbf,WACI,OACI,gCACI,oBAAInC,GAAK,QAAT,gCACA,cAAC,EAAD,IACA,uBACA,cAAC,EAAD,IACA,uBACA,cAAC,EAAD,QCTZoC,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.93ca8d9c.chunk.js","sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport employees from \"../employees.json\";\r\n\r\n//to sort by name by default\r\nfunction sortByProperty(property) {\r\n    return function (a, b) {\r\n        if (a[property] > b[property])\r\n            return 1;\r\n        else if (a[property] < b[property])\r\n            return -1;\r\n\r\n        return 0;\r\n    }\r\n}\r\nemployees.sort(sortByProperty(\"name\"));\r\nfunction Sort() {\r\n    const [data, setData] = useState([]);\r\n    const [sortType, setSortType] = useState('name');\r\n  \r\n    useEffect(() => {\r\n      const sortArray = type => {\r\n        const types = {\r\n          id: 'id',\r\n          name: 'name',\r\n          //switched to dept to see if will sort\r\n          dept: 'dept',\r\n        };\r\n        const sortProperty = types[type];\r\n        const sorted = [...employees].sort((a, b) => a[sortProperty] - b[sortProperty]);\r\n        //changed from a-b to fix id sort\r\n        setData(sorted);\r\n      };\r\n  \r\n      sortArray(sortType);\r\n    }, [sortType]); \r\n  \r\n    return (\r\n      <div className=\"select\">\r\n          <label>Sort Employees </label>\r\n        <select onChange={(e) => setSortType(e.target.value)}> \r\n        {/* sorts id in reverse order need an option to change from a-b instead */}\r\n          <option value=\"id\">ID</option>\r\n          {/* sorts by name */}\r\n          <option value=\"name\">Name</option>\r\n          {/* doesn't work */}\r\n          <option value=\"dept\">Department</option>\r\n        </select>\r\n{/* shows data sorting on these but not on table */}\r\n        {data.map(employee => (\r\n          <div key={employee.id}>\r\n            <div>{`ID: ${employee.id}`}</div>\r\n            <div>{`Name: ${employee.name}`}</div>\r\n            <div>{`Department: ${employee.dept}`}</div>\r\n          </div>\r\n        ))}\r\n      </div>\r\n    );\r\n  }\r\n  \r\nexport default Sort;","import React, { Component } from 'react'\r\n//import React from 'react'\r\nimport \"./style.css\";\r\nimport employees from \"../employees.json\";\r\n//to see if putting it here worked\r\n// import Filter from \"../Filter\";\r\n// import Sort from \"../Sort\";\r\n\r\nclass Table extends Component {\r\n   constructor(props) {\r\n      super(props) //since we are extending class Table so we have to use super in order to override Component class constructor\r\n      this.state = {employees};\r\n   }\r\n   renderTableData() {\r\n    return employees.map((employee) => {\r\n      const { id, name, dept} = employee //destructuring\r\n       return (\r\n          <tr key={id}>\r\n             <td>{id}</td>\r\n             <td>{name}</td>\r\n             <td>{dept}</td>\r\n          </tr>\r\n       )\r\n    })\r\n }\r\n\r\n renderTableHeader() {\r\n    let header = Object.keys(this.state.employees[0])\r\n    return header.map((key, index) => {\r\n       return <th key={index}>{key.toUpperCase()}</th>\r\n    })\r\n }\r\n\r\n render() {\r\n    return (\r\n       <div>\r\n         {/* <Filter/>\r\n          <Sort/> */}\r\n          <table id='employees'>\r\n             <tbody>\r\n                <tr>{this.renderTableHeader()}</tr>\r\n                {this.renderTableData()}\r\n             </tbody>\r\n          </table>\r\n       </div>\r\n    )\r\n }\r\n}\r\n\r\nexport default Table //exporting a component make it reusable and this is the beauty of react","import React, { useState } from \"react\";\r\nimport employees from \"../employees.json\";\r\n\r\n//works, just need to tie it all together\r\nfunction Filter (){\r\n    const [value, setValue] = useState('')\r\n  \r\n    return (\r\n      <div>\r\n        <label>Filter Employees </label>\r\n        <input id = \"filter\"\r\n          type=\"text\"\r\n          value={value} \r\n          onChange={e => setValue(e.target.value)} \r\n        />\r\n  \r\n        {employees\r\n          .filter(employee => {\r\n            if (!value) return true\r\n            if (employee.name.includes(value)) {\r\n              return true\r\n            }\r\n          })\r\n          .map(employee => (\r\n            <div>\r\n              <p>{`ID: ${employee.id}`}</p>\r\n              <p>{`Name: ${employee.name}`}</p>\r\n              <p>{`Department: ${employee.dept}`}</p>\r\n            </div>\r\n          )\r\n          )\r\n        }\r\n      </div>\r\n    )\r\n}\r\nexport default Filter;","import React from \"react\";\r\nimport Table from \"./components/Table\";\r\nimport Sort from \"./components/Sort\";\r\nimport Filter from \"./components/Filter\";\r\nimport \"./style.css\";\r\n\r\nfunction App() {\r\n    return (\r\n        <div>\r\n            <h1 id = \"title\">Employee Directory</h1>\r\n            <Sort/>\r\n            <br></br>\r\n            <Filter/>\r\n            <br></br>\r\n            <Table/>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default App;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\n//import 'bootstrap/dist/css/bootstrap.min.css';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));"],"sourceRoot":""}